version: '3.8'

networks:
  API:
    driver: bridge

volumes:
  static:
  media:
  redis_data:
  mysql_data:

services:

  api:
    build: app/.
    container_name: api
    restart: unless-stopped
    volumes:
      - static:/opt/app/static
      - media:/opt/app/media
    networks:
      - API
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  redis:
    image: redis
    container_name: redis
    hostname: redis
    restart: unless-stopped
    networks:
      - API
    volumes:
      - redis_data:/data
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  worker:
    build:
      context: app/.
    container_name: worker
    hostname: worker
    networks:
      - API
    entrypoint: celery
    command: -A config.celery worker -l INFO
    volumes:
      - ./app:/app
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env

  flower:
    build:
      context: app/.
    hostname: flower
    container_name: flower
    environment:
      BROKER_URL: ${CELERY_BROKER_URL}
    networks:
      - API
    entrypoint: celery
    command: -A config.celery flower
    volumes:
      - ./app:/app
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - ${FLOWER_PORT}:${FLOWER_PORT}
    env_file:
      - .env

  mysql:
    image: mysql:${MYSQL_VERSION}
    hostname: mysql
    container_name: mysql
    networks:
      - API
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQLX_AUTHENTICATION_POLICY: caching_sha2_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 5s
      timeout: 5s
      retries: 15
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    env_file:
      - .env

  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    networks:
      - API
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/site.conf:/etc/nginx/conf.d/site.conf:ro
      - static:/opt/app/static
      - media:/opt/app/media
    environment:
      NGINX_SET_REAL_IP_FROM: 192.168.1.0/24
    depends_on:
      - api
    ports:
      - ${NGINX_PORT}:80
